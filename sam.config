AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: SAM Template for P1ston Relay and EDI Lambdas

Parameters:
  AppBucketName:
    Type: String
    Description: "REQUIRED: Unique S3 bucket name to use for the app."
  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - stage
      - live
  ServiceRole:
    Type: String
    Default: arn:aws:iam::*******:role/RelayServiceRole
  StateMachineRole:
    Type: String
    Default: arn:aws:iam::*******:role/NewPoNotificationDev-StateMachineRole-************
  RelayPrimaryBucket:
    Type: String
    Default: relay-files-store
  P1OrderApiBaseUrl:
    Type: String
    Default: https://orderapi-dev.p1ston.com/Prod/api/v1
  P1OpenApiBaseUrl:
    Type: String
    Default: https://***********.execute-api.us-east-1.amazonaws.com/Prod/api

Mappings:
  CommonLayers:
    Layers:
      Poppler: arn:aws:lambda:us-east-1:*******:layer:poppler:1
      Tesseract: arn:aws:lambda:us-east-1:*******:layer:tesseract:1

Globals:
  Function:
    Timeout: 160
    LoggingConfig:
      LogFormat: JSON
    Environment:
      Variables:
        PYTHONPATH: "/var/task/src"
        P1_AWS_Region: us-east-1
        P1_Role_ARN: !Ref ServiceRole
        ENVIRONMENT: !Ref Environment
        MASTER_TABLE: p1-klf-primary-table-back
        COMMON_TABLE: P1stonCommonTableDev
        Relay_Primary_Bucket: !Ref RelayPrimaryBucket
        P1OrderApiBaseUrl: !Ref P1OrderApiBaseUrl
        P1OpenApiBaseUrl: !Ref P1OpenApiBaseUrl

Resources:
  RelayStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      Name: !Sub "${Environment}_RelayStateMachine"
      DefinitionUri: stepFunction.asl.json
      Role: !Ref StateMachineRole
      DefinitionSubstitutions:
        DocClassificationLambdaArn: !GetAtt DocClassificationPipelineFunction.Arn
        WaitForClassificationCompleteHandlerArn: !GetAtt WaitForClassificationCompleteLambda.Arn
        DataExtractorLambdaArn: !GetAtt DataExtractionFunction.Arn
        RelayValidationLambdaArn: !GetAtt RelayValidationLambda.Arn

  EmailProcessingFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
          - src/index.ts
    Properties:
      CodeUri: EmailProcessingLambda/
      Handler: index.emailProcessingHandler
      Runtime: nodejs20.x
      FunctionName: !Sub "${Environment}_EmailProcessingLambda"
      Description: "P1ston email processing lambda to parse email and call step function for further processing."
      Architectures:
        - x86_64
      PackageType: Zip
      MemorySize: 1024
      Timeout: 180
      Role: !Ref ServiceRole
      Environment:
        Variables:
          RelayStepFunctionARN: !GetAtt RelayStateMachine.Arn

  DocClassificationPipelineFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: DocClassificationPipelineLambda/
      Handler: src.main.lambda_handler
      Runtime: python3.12
      FunctionName: !Sub "${Environment}_DocClassificationPipelineLambda"
      Description: "P1ston document classification pipeline lambda to start document classification pipeline."
      Architectures:
        - x86_64
      PackageType: Zip
      MemorySize: 1024
      Timeout: 180
      Layers:
        - !FindInMap [CommonLayers, Layers, Poppler]
        - !FindInMap [CommonLayers, Layers, Tesseract]
      Role: !Ref ServiceRole
      Environment:
        Variables:
          COMPREHEND_CLASSIFIER_ARN: arn:aws:comprehend:us-east-1:*******:document-classifier/RelayClassifierV2/version/1
          COMPREHEND_ROLE_ARN: arn:aws:iam::*******:role/service-role/AmazonComprehendServiceRole-RelayClassifier

  DataExtractionFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ExtractionLambda/
      Handler: src.data_extractor_lambda.data_extraction_handler
      Runtime: python3.12
      FunctionName: !Sub "${Environment}_DataExtractorLambda"
      Description: "P1ston data extractor lambda to parse PDF and generate structured JSON output."
      Architectures:
        - x86_64
      PackageType: Zip
      MemorySize: 2048
      Timeout: 600
      Layers:
        - !FindInMap [CommonLayers, Layers, Poppler]
        - !FindInMap [CommonLayers, Layers, Tesseract]
      Role: !Ref ServiceRole
      Environment:
        Variables:
          P1_Claude_API_KEY: ************************
          P1_OPENAI_API_KEY: ************************
          P1_GEMINI_API_KEY: ************************

  WaitForClassificationCompleteLambda:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
          - src/index.ts
    Properties:
      CodeUri: WaitForClassificationComplete/
      Handler: index.waitForClassificationCompleteHandler
      Runtime: nodejs20.x
      FunctionName: !Sub "${Environment}_WaitForClassificationCompleteHandler"
      Description: "P1ston wait for classification complete lambda to handle classification completion events."
      Architectures:
        - x86_64
      PackageType: Zip
      MemorySize: 512
      Timeout: 60
      Role: !Ref ServiceRole

  S3EventNotificationLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: S3EventNotificationLambda/
      Handler: src.main.lambda_handler
      Runtime: python3.12
      FunctionName: !Sub "${Environment}_S3EventNotificationLambda"
      Description: "P1ston S3 event notification lambda to handle S3 events."
      Architectures:
        - x86_64
      PackageType: Zip
      MemorySize: 512
      Timeout: 60
      Role: !Ref ServiceRole

  RelayValidationLambda:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
          - src/validationHandler.ts
    Properties:
      CodeUri: ValidationLambda/
      Handler: validationHandler.validationHandler
      Runtime: nodejs20.x
      FunctionName: !Sub "${Environment}_RelayValidationLambda"
      Description: "P1ston email processing lambda to parse email and call step function for further processing."
      Architectures:
        - x86_64
      PackageType: Zip
      MemorySize: 1024
      Timeout: 120
      Role: !Ref ServiceRole

  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Sub: ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0











# # =======================================================================================
#   OcrProcessingFunction:
#     Type: AWS::Serverless::Function
#     Properties:
#       PackageType: Image
#       ImageConfig:
#         Command: ["src.ocr_processing.lambda_handler"]
#       FunctionName: dev_OcrProcessingLambda
#       Description: "P1ston OCR processing lambda to extract text from PDFs using EasyOCR."
#       MemorySize: 2048  # OCR is memory intensive
#       Timeout: 900
#       Role: !Ref ServiceRole
#       Environment:
#         Variables:
#           PYTHONPATH: "/var/task"
#     Metadata:
#       Dockerfile: Dockerfile
#       DockerContext: ./OcrProcessingLambda
#       DockerTag: latest
